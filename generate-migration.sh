#!/bin/bash

# Script pour g√©n√©rer automatiquement les migrations Flyway depuis les entit√©s JPA
# Usage: ./generate-migration.sh

set -e

echo "üöÄ D√©marrage de la g√©n√©ration des migrations Flyway..."

# 1. Nettoyer les fichiers temporaires
echo "üßπ Nettoyage des fichiers temporaires..."
rm -f target/generated-schema.sql

# 2. Compiler le projet pour s'assurer que toutes les classes sont disponibles
echo "üî® Compilation du projet..."
./mvnw clean compile -q

# 3. G√©n√©rer le script DDL depuis les entit√©s avec Spring Boot
echo "‚öôÔ∏è G√©n√©ration du script DDL..."
./mvnw spring-boot:run -Dspring.profiles.active=ddl-export -Dspring-boot.run.main-class=com.tempo.application.utils.DDLGenerator -q

# 4. Afficher le r√©sultat
if [ -f "target/generated-schema.sql" ]; then
    echo "‚úÖ Script DDL g√©n√©r√© avec succ√®s!"
    echo "üìÑ Contenu du script g√©n√©r√©:"
    echo "$(head -n 10 target/generated-schema.sql)..."
    echo ""
    echo "üìÅ Fichiers cr√©√©s :"
    ls -la target/generated-schema.sql 2>/dev/null || echo "Fichier DDL non trouv√©"
    echo ""
    echo "üìÇ Migrations Flyway :"
    ls -la src/main/resources/db/migration/ 2>/dev/null || echo "Aucune migration trouv√©e"
else
    echo "‚ùå √âchec de la g√©n√©ration du script DDL"
    exit 1
fi

echo ""
echo "üéâ Migration g√©n√©r√©e avec succ√®s!"
echo "üí° Prochaines √©tapes :"
echo "   1. V√©rifiez le contenu de la migration dans src/main/resources/db/migration/"
echo "   2. D√©marrez PostgreSQL avec: docker-compose -f compose.dev.postgresql.yml up -d"
echo "   3. Appliquez la migration avec: ./db-dev-tools.sh migrate"
echo "   4. Ou d√©marrez l'application pour l'appliquer automatiquement" 