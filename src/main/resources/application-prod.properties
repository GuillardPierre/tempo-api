# Configuration de production Tempo API pour Heroku
spring.application.name=tempo-api

# Base de données PostgreSQL Heroku (variables automatiquement fournies par Heroku)
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=${JDBC_DATABASE_URL}
spring.datasource.username=${JDBC_DATABASE_USERNAME}
spring.datasource.password=${JDBC_DATABASE_PASSWORD}

# Configuration de pool de connexions pour la production
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.idle-timeout=600000
spring.datasource.hikari.max-lifetime=1800000

# JPA/Hibernate Configuration
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false

# Configuration DDL Export (désactivé en production)
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.hbm2ddl.auto=none

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.locations=classpath:db/migration
spring.flyway.baseline-on-migrate=true
spring.flyway.baseline-version=0
spring.flyway.validate-on-migrate=true

# Serveur (Heroku définit automatiquement le port)
server.port=${PORT:8080}

# Sécurité JWT
app.secret-key=${APP_SECRET_KEY}
app.expiration-time=86400000

# Logging de production
logging.level.root=WARN
logging.level.com.tempo=INFO
logging.level.org.springframework.security=WARN

# Désactiver Docker Compose integration
spring.docker.compose.enabled=false

# Configuration de production
spring.profiles.active=prod

